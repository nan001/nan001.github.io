(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{525:function(t,a,e){"use strict";e.r(a);var s=e(45),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"flex-初体验"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-初体验"}},[t._v("#")]),t._v(" flex 初体验")]),t._v(" "),e("p",[t._v("Flexbox 是一种强大的 CSS 技术，但是不同浏览器对于 Flexbox 属性的支持并不完全一致，因此需要考虑浏览器的兼容性。在这里，我们将简要介绍每个 Flexbox 属性的浏览器兼容性情况。")]),t._v(" "),e("h2",{attrs:{id:"display-flex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#display-flex"}},[t._v("#")]),t._v(" display: flex")]),t._v(" "),e("p",[t._v("这是将一个元素定义为 Flexbox 容器的基本属性，支持情况非常好，包括 IE10+ 和所有现代浏览器。")]),t._v(" "),e("h2",{attrs:{id:"flex-direction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction"}},[t._v("#")]),t._v(" flex-direction")]),t._v(" "),e("p",[t._v("该属性用于指定 Flexbox 容器中项目的排列方向。该属性的兼容性也非常好，包括 IE10+ 和所有现代浏览器。")]),t._v(" "),e("h2",{attrs:{id:"justify-content"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#justify-content"}},[t._v("#")]),t._v(" justify-content")]),t._v(" "),e("p",[t._v("该属性用于指定如何在 Flexbox 容器中对齐项目的位置。这个属性在大多数现代浏览器中得到了很好的支持，包括 IE11+，但在某些旧版浏览器中可能存在兼容性问题。")]),t._v(" "),e("h2",{attrs:{id:"align-items"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#align-items"}},[t._v("#")]),t._v(" align-items")]),t._v(" "),e("p",[t._v("该属性用于指定如何在 Flexbox 容器中垂直对齐项目。与 justify-content 相似，这个属性在大多数现代浏览器中得到了很好的支持，包括 IE11+，但在某些旧版浏览器中可能存在兼容性问题。")]),t._v(" "),e("h2",{attrs:{id:"align-self"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#align-self"}},[t._v("#")]),t._v(" align-self")]),t._v(" "),e("p",[t._v("该属性用于指定如何对齐单个项目。与 align-items 相似，这个属性在大多数现代浏览器中得到了很好的支持，包括 IE11+，但在某些旧版浏览器中可能存在兼容性问题。")]),t._v(" "),e("h2",{attrs:{id:"flex-wrap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap"}},[t._v("#")]),t._v(" flex-wrap")]),t._v(" "),e("p",[t._v("该属性用于指定 Flexbox 容器中是否换行，以及如何换行。这个属性在大多数现代浏览器中得到了很好的支持，包括 IE11+，但在某些旧版浏览器中可能存在兼容性问题。")]),t._v(" "),e("h2",{attrs:{id:"flex-flow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-flow"}},[t._v("#")]),t._v(" flex-flow")]),t._v(" "),e("p",[t._v("这是 flex-direction 和 flex-wrap 的简写属性，它允许您同时指定这两个属性。这个属性在大多数现代浏览器中得到了很好的支持，包括 IE11+，但在某些旧版浏览器中可能存在兼容性问题。")]),t._v(" "),e("h2",{attrs:{id:"align-content"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#align-content"}},[t._v("#")]),t._v(" align-content")]),t._v(" "),e("p",[t._v("该属性用于指定如何在多行 Flexbox 容器中对齐项目。这个属性在大多数现代浏览器中得到了很好的支持，包括 IE11+，但在某些旧版浏览器中可能存在兼容性问题。")]),t._v(" "),e("h2",{attrs:{id:"order"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#order"}},[t._v("#")]),t._v(" order")]),t._v(" "),e("p",[t._v("该属性用于指定 Flexbox 中项目的顺序。这个属性在大多数现代浏览器中得到了很好的支持，包括 IE11+，但在某些旧版浏览器中可能存在兼容性问题。")]),t._v(" "),e("h2",{attrs:{id:"flex-grow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-grow"}},[t._v("#")]),t._v(" flex-grow")]),t._v(" "),e("p",[t._v("该属性用于指定项目的放大比例。这个属性在大多数现代浏览器中得到了很好的支持，包括 IE11+，但在某些旧版浏览器中可能存在兼容性问题。")]),t._v(" "),e("h2",{attrs:{id:"flex-shrink"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-shrink"}},[t._v("#")]),t._v(" flex-shrink")]),t._v(" "),e("p",[t._v("该属性用于指定项目的缩小比例。这个属性在大多数现代浏览器中得到了很好的支持，包括 IE11+，但在某些旧版浏览器中可能存在兼容性问题。")]),t._v(" "),e("h2",{attrs:{id:"flex-basis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis"}},[t._v("#")]),t._v(" flex-basis")]),t._v(" "),e("p",[t._v("该属性用于指定项目的初始大小。这个属性在大多数现代浏览器中得到了很好的支持，包括 IE11+，但在某些旧版浏览器中可能存在兼容性问题。")]),t._v(" "),e("h2",{attrs:{id:"flex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[t._v("#")]),t._v(" flex")]),t._v(" "),e("p",[t._v("这是 flex-grow、flex-shrink 和 flex-basis 的简写属性，允许您同时指定这三个属性。这个属性在大多数现代浏览器中得到了很好的支持，包括 IE11+，但在某些旧版浏览器中可能存在兼容性问题。")]),t._v(" "),e("p",[t._v("总的来说，大多数现代浏览器都对 Flexbox 属性提供了很好的支持，但在某些旧版浏览器中可能存在兼容性问题。因此，在使用 Flexbox 属性时，建议测试和检查您的布局在不同浏览器中的表现，以确保兼容性。")])])}),[],!1,null,null,null);a.default=r.exports}}]);