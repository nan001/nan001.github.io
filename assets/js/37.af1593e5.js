(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{372:function(t,e,s){},437:function(t,e,s){"use strict";s(372)},621:function(t,e,s){"use strict";s.r(e);s(437);var u=s(45),a=Object(u.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vuex-学习主页"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex-学习主页"}},[t._v("#")]),t._v(" vuex 学习主页")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("这只是一个用来记录学习练手的个人项目。")])]),t._v(" "),s("p",[t._v("Vuex是Vue.js框架的状态管理库，用于在Vue应用程序中管理和共享状态。Vuex 4是Vuex的最新版本，它引入了一些新的特性和更改。下面是一些学习Vuex 4的步骤：")]),t._v(" "),s("p",[t._v("理解Vuex的核心概念：Vuex的核心概念包括state（应用程序状态）、getters（从state中派生出一些状态）、mutations（同步更改state）、actions（异步操作）和modules（模块化组织应用程序状态）。")]),t._v(" "),s("p",[t._v("安装Vuex 4：可以使用npm或yarn等包管理工具来安装Vuex 4。在Vue.js项目中，可以使用以下命令来安装：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("npm install vuex@next\n")])])]),s("p",[t._v("创建Vuex Store：创建一个Store实例来管理应用程序状态，可以通过调用Vuex.createStore()方法来创建一个Store实例。在创建Store实例时，需要传入一个对象，该对象包含state、getters、mutations和actions等属性。")]),t._v(" "),s("p",[t._v("在Vue组件中使用Vuex：可以在Vue组件中使用Vuex来管理和访问应用程序状态。使用Vue的计算属性来派生出一些状态，并使用Vuex的mutations和actions来更改和操作应用程序状态。")]),t._v(" "),s("p",[t._v("使用插件扩展Vuex：Vuex 4引入了一个新的插件API，可以使用插件扩展Vuex。可以编写一个插件来实现一些常见的功能，例如日志记录、持久化存储等。")]),t._v(" "),s("p",[t._v("以上是学习Vuex 4的一些基本步骤，你可以通过阅读官方文档和尝试一些示例代码来更深入地了解Vuex 4的使用。")])])}),[],!1,null,null,null);e.default=a.exports}}]);